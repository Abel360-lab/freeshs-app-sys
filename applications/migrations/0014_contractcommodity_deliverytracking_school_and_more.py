# Generated by Django 5.2.6 on 2025-09-24 13:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0013_storereceiptvoucher_invoice_suppliercontract_and_more'),
        ('core', '0005_commodity_image'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContractCommodity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity to be supplied', max_digits=10)),
                ('unit_of_measure', models.CharField(help_text='Unit of measure', max_length=50)),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Unit price', max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total amount for this commodity', max_digits=15)),
                ('delivery_deadline', models.DateField(blank=True, help_text='Delivery deadline', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commodity', models.ForeignKey(help_text='Commodity to be supplied', on_delete=django.db.models.deletion.CASCADE, to='core.commodity')),
                ('contract', models.ForeignKey(help_text='Associated contract', on_delete=django.db.models.deletion.CASCADE, related_name='contract_commodities', to='applications.suppliercontract')),
                ('region', models.ForeignKey(blank=True, help_text='Region (if not specific to a school)', null=True, on_delete=django.db.models.deletion.CASCADE, to='core.region')),
            ],
            options={
                'verbose_name': 'Contract Commodity',
                'verbose_name_plural': 'Contract Commodities',
                'ordering': ['commodity__name', 'school__name'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(help_text='Serial number for this delivery', max_length=100)),
                ('delivery_date', models.DateField(help_text='Date of delivery')),
                ('srv_number', models.CharField(help_text='Store Receipt Voucher number', max_length=100)),
                ('waybill_number', models.CharField(help_text='Waybill number', max_length=100)),
                ('quantity_delivered', models.DecimalField(decimal_places=2, help_text='Actual quantity delivered', max_digits=10)),
                ('unit_of_measure', models.CharField(help_text='Unit of measure', max_length=50)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_TRANSIT', 'In Transit'), ('DELIVERED', 'Delivered'), ('VERIFIED', 'Verified'), ('REJECTED', 'Rejected')], default='PENDING', help_text='Delivery status', max_length=20)),
                ('srv_document', models.FileField(blank=True, help_text='SRV document', null=True, upload_to='deliveries/srv/%Y/%m/')),
                ('waybill_document', models.FileField(blank=True, help_text='Waybill document', null=True, upload_to='deliveries/waybill/%Y/%m/')),
                ('invoice_document', models.FileField(blank=True, help_text='Invoice document', null=True, upload_to='deliveries/invoice/%Y/%m/')),
                ('verified_at', models.DateTimeField(blank=True, help_text='Date when delivery was verified', null=True)),
                ('verification_notes', models.TextField(blank=True, help_text='Verification notes')),
                ('notes', models.TextField(blank=True, help_text='Additional delivery notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract_commodity', models.ForeignKey(help_text='Associated contract commodity', on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='applications.contractcommodity')),
                ('supplier_user', models.ForeignKey(help_text='Supplier who made the delivery', on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, help_text='Admin who verified the delivery', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_deliveries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Delivery Tracking',
                'verbose_name_plural': 'Delivery Tracking',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='School name', max_length=200)),
                ('code', models.CharField(help_text='Unique school code', max_length=50, unique=True)),
                ('district', models.CharField(help_text='District name', max_length=100)),
                ('address', models.TextField(help_text='School address')),
                ('contact_person', models.CharField(help_text='Contact person name', max_length=100)),
                ('contact_phone', models.CharField(help_text='Contact phone number', max_length=20)),
                ('contact_email', models.EmailField(blank=True, help_text='Contact email address', max_length=254)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the school is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('region', models.ForeignKey(help_text='Region where the school is located', on_delete=django.db.models.deletion.CASCADE, related_name='schools', to='core.region')),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='contractcommodity',
            name='school',
            field=models.ForeignKey(blank=True, help_text='Specific school (if applicable)', null=True, on_delete=django.db.models.deletion.CASCADE, to='applications.school'),
        ),
        migrations.CreateModel(
            name='ContractAcceptance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', help_text='Acceptance status', max_length=20)),
                ('acceptance_date', models.DateTimeField(blank=True, help_text='Date when contract was accepted', null=True)),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason for rejection (if applicable)')),
                ('terms_accepted', models.BooleanField(default=False, help_text='Whether supplier accepted the terms')),
                ('notes', models.TextField(blank=True, help_text='Additional notes from supplier')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contract', models.ForeignKey(help_text='Associated contract', on_delete=django.db.models.deletion.CASCADE, related_name='acceptances', to='applications.suppliercontract')),
                ('supplier_user', models.ForeignKey(help_text='Supplier user who accepted/rejected the contract', on_delete=django.db.models.deletion.CASCADE, related_name='contract_acceptances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Contract Acceptance',
                'verbose_name_plural': 'Contract Acceptances',
                'ordering': ['-created_at'],
                'unique_together': {('contract', 'supplier_user')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='contractcommodity',
            unique_together={('contract', 'commodity', 'school')},
        ),
    ]
