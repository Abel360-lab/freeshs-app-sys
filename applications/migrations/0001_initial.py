# Generated by Django 5.2.6 on 2025-09-09 18:19

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SupplierApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(help_text='Official business name', max_length=200)),
                ('physical_address', models.TextField(help_text='Physical address of the business')),
                ('city', models.CharField(help_text='City where the business is located', max_length=100)),
                ('country', models.CharField(default='Ghana', help_text='Country where the business is located', max_length=100)),
                ('telephone', models.CharField(help_text='Business telephone number in Ghana format (+233XXXXXXXXX)', max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be in Ghana format: +233XXXXXXXXX', regex='^\\+233\\d{9}$')])),
                ('email', models.EmailField(help_text='Business email address', max_length=254, unique=True)),
                ('warehouse_location', models.TextField(help_text='Location of warehouse/storage facility')),
                ('declaration_agreed', models.BooleanField(default=False, help_text='Whether the applicant agrees to the terms and conditions')),
                ('signer_name', models.CharField(help_text='Name of the person signing the application', max_length=200)),
                ('signer_designation', models.CharField(help_text='Designation/position of the signer', max_length=200)),
                ('signed_at', models.DateTimeField(blank=True, help_text='When the application was signed', null=True)),
                ('tracking_code', models.SlugField(default=uuid.uuid4, help_text='Unique tracking code for the application', unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('UNDER_REVIEW', 'Under Review'), ('NEEDS_MORE_DOCS', 'Needs More Documents'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('WITHDRAWN', 'Withdrawn')], default='DRAFT', help_text='Current status of the application', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, help_text='When the application was submitted', null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='When the application was last reviewed', null=True)),
                ('decided_at', models.DateTimeField(blank=True, help_text='When the final decision was made', null=True)),
                ('reviewer_comment', models.TextField(blank=True, help_text='Comments from the reviewer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('commodities_to_supply', models.ManyToManyField(help_text='Commodities the business intends to supply', related_name='applications', to='core.commodity')),
                ('region', models.ForeignKey(help_text='Region where the business is located', on_delete=django.db.models.deletion.PROTECT, related_name='applications', to='core.region')),
                ('supplier_user', models.OneToOneField(blank=True, help_text='User account created for approved supplier', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplier_application', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Supplier Application',
                'verbose_name_plural': 'Supplier Applications',
                'db_table': 'applications_supplier_application',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NextOfKin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Full name of the next of kin', max_length=200)),
                ('relationship', models.CharField(help_text='Relationship to the applicant', max_length=100)),
                ('address', models.TextField(help_text='Address of the next of kin')),
                ('mobile', models.CharField(help_text='Mobile number in Ghana format', max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be in Ghana format: +233XXXXXXXXX', regex='^\\+233\\d{9}$')])),
                ('id_card_type', models.CharField(blank=True, choices=[('GHANA_CARD', 'Ghana Card'), ('PASSPORT', 'Passport'), ('VOTER_ID', 'Voter ID'), ('OTHER', 'Other')], help_text='Type of ID card', max_length=20)),
                ('id_card_number', models.CharField(blank=True, help_text='ID card number', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(help_text='Application this next of kin belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='next_of_kin', to='applications.supplierapplication')),
            ],
            options={
                'verbose_name': 'Next of Kin',
                'verbose_name_plural': 'Next of Kin',
                'db_table': 'applications_next_of_kin',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Full name of the team member', max_length=200)),
                ('address', models.TextField(help_text='Address of the team member')),
                ('city', models.CharField(help_text='City where the team member lives', max_length=100)),
                ('country', models.CharField(default='Ghana', help_text='Country where the team member lives', max_length=100)),
                ('telephone', models.CharField(blank=True, help_text='Telephone number in Ghana format', max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be in Ghana format: +233XXXXXXXXX', regex='^\\+233\\d{9}$')])),
                ('email', models.EmailField(blank=True, help_text='Email address', max_length=254)),
                ('id_card_type', models.CharField(blank=True, choices=[('GHANA_CARD', 'Ghana Card'), ('PASSPORT', 'Passport'), ('VOTER_ID', 'Voter ID'), ('OTHER', 'Other')], help_text='Type of ID card', max_length=20)),
                ('id_card_number', models.CharField(blank=True, help_text='ID card number', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(help_text='Application this team member belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='applications.supplierapplication')),
                ('region', models.ForeignKey(help_text='Region where the team member lives', on_delete=django.db.models.deletion.PROTECT, related_name='team_members', to='core.region')),
            ],
            options={
                'verbose_name': 'Team Member',
                'verbose_name_plural': 'Team Members',
                'db_table': 'applications_team_member',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(help_text='Name of the bank', max_length=200)),
                ('branch', models.CharField(help_text='Branch of the bank', max_length=200)),
                ('account_name', models.CharField(help_text='Name on the account (must match business name)', max_length=200)),
                ('account_number', models.CharField(help_text='Account number', max_length=50)),
                ('account_index', models.PositiveSmallIntegerField(choices=[(1, 'Option 1'), (2, 'Option 2')], help_text='Account option (1 or 2)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(help_text='Application this bank account belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='applications.supplierapplication')),
            ],
            options={
                'verbose_name': 'Bank Account',
                'verbose_name_plural': 'Bank Accounts',
                'db_table': 'applications_bank_account',
                'ordering': ['account_index'],
                'unique_together': {('application', 'account_index')},
            },
        ),
    ]
