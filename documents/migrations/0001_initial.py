# Generated by Django 5.2.6 on 2025-09-09 18:19

import django.core.validators
import django.db.models.deletion
import documents.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('applications', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(choices=[('BUSINESS_REGISTRATION_DOCS', 'Business Registration Documents'), ('VAT_CERTIFICATE', 'VAT Certificate'), ('PPA_CERTIFICATE', 'PPA Certificate'), ('TAX_CLEARANCE_CERT', 'Tax Clearance Certificate'), ('PROOF_OF_OFFICE', 'Proof of Office'), ('ID_MD_CEO_PARTNERS', 'ID of MD/CEO/Partners'), ('GCX_REGISTRATION_PROOF', 'GCX Registration Proof'), ('TEAM_MEMBER_ID', 'Team Member ID'), ('FDA_CERT_PROCESSED_FOOD', 'FDA Certificate for Processed Food')], help_text='Unique code for the document requirement', unique=True)),
                ('label', models.CharField(help_text='Display label for the requirement', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of what documents are required')),
                ('is_required', models.BooleanField(default=True, help_text='Whether this document is mandatory')),
                ('condition_note', models.TextField(blank=True, help_text="Additional conditions or notes (e.g., 'Required if supplying processed foods')")),
                ('allowed_extensions', models.JSONField(default=list, help_text='List of allowed file extensions')),
                ('max_file_size_mb', models.PositiveIntegerField(default=10, help_text='Maximum file size in MB')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this requirement is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document Requirement',
                'verbose_name_plural': 'Document Requirements',
                'db_table': 'documents_document_requirement',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='OutstandingDocumentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='Message to the applicant about what documents are needed')),
                ('is_resolved', models.BooleanField(default=False, help_text='Whether all requested documents have been uploaded')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When all documents were uploaded', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(help_text='Application this request is for', on_delete=django.db.models.deletion.CASCADE, related_name='outstanding_requests', to='applications.supplierapplication')),
                ('requested_by', models.ForeignKey(help_text='Staff member who made the request', on_delete=django.db.models.deletion.CASCADE, related_name='document_requests', to=settings.AUTH_USER_MODEL)),
                ('requirements', models.ManyToManyField(help_text='Document requirements that are outstanding', related_name='outstanding_requests', to='documents.documentrequirement')),
            ],
            options={
                'verbose_name': 'Outstanding Document Request',
                'verbose_name_plural': 'Outstanding Document Requests',
                'db_table': 'documents_outstanding_document_request',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Uploaded document file', upload_to=documents.models.document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('original_filename', models.CharField(help_text='Original filename when uploaded', max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('mime_type', models.CharField(help_text='MIME type of the file', max_length=100)),
                ('verified', models.BooleanField(default=False, help_text='Whether this document has been verified by staff')),
                ('verified_at', models.DateTimeField(blank=True, help_text='When this document was verified', null=True)),
                ('verifier_note', models.TextField(blank=True, help_text='Notes from the verifier')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(help_text='Application this document belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='document_uploads', to='applications.supplierapplication')),
                ('requirement', models.ForeignKey(help_text='Document requirement this upload satisfies', on_delete=django.db.models.deletion.CASCADE, related_name='uploads', to='documents.documentrequirement')),
                ('verified_by', models.ForeignKey(blank=True, help_text='Staff member who verified this document', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Upload',
                'verbose_name_plural': 'Document Uploads',
                'db_table': 'documents_document_upload',
                'ordering': ['-uploaded_at'],
                'unique_together': {('application', 'requirement')},
            },
        ),
    ]
