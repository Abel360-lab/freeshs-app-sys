# Generated by Django 5.2.6 on 2025-09-11 17:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('applications', '0007_alter_nextofkin_mobile_and_more'),
        ('notifications', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date for this analytics record')),
                ('channel', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification')], help_text='Notification channel', max_length=20)),
                ('template_name', models.CharField(help_text='Template name', max_length=100)),
                ('total_sent', models.PositiveIntegerField(default=0, help_text='Total notifications sent')),
                ('total_delivered', models.PositiveIntegerField(default=0, help_text='Total notifications delivered')),
                ('total_opened', models.PositiveIntegerField(default=0, help_text='Total notifications opened')),
                ('total_clicked', models.PositiveIntegerField(default=0, help_text='Total notifications clicked')),
                ('total_failed', models.PositiveIntegerField(default=0, help_text='Total notifications failed')),
                ('total_bounced', models.PositiveIntegerField(default=0, help_text='Total notifications bounced')),
                ('delivery_rate', models.FloatField(default=0.0, help_text='Delivery rate (delivered/sent)')),
                ('open_rate', models.FloatField(default=0.0, help_text='Open rate (opened/delivered)')),
                ('click_rate', models.FloatField(default=0.0, help_text='Click rate (clicked/opened)')),
                ('failure_rate', models.FloatField(default=0.0, help_text='Failure rate (failed/sent)')),
                ('total_cost', models.DecimalField(decimal_places=2, default=0.0, help_text='Total cost for this period', max_digits=10)),
                ('average_cost_per_notification', models.DecimalField(decimal_places=4, default=0.0, help_text='Average cost per notification', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Analytics',
                'verbose_name_plural': 'Notification Analytics',
                'db_table': 'notifications_notification_analytics',
                'ordering': ['-date', 'channel'],
            },
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='application',
            field=models.ForeignKey(blank=True, help_text='Related application (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notification_logs', to='applications.supplierapplication'),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='channel',
            field=models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification')], default='EMAIL', help_text='Notification channel used', max_length=20),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='clicked_at',
            field=models.DateTimeField(blank=True, help_text='When a link in the notification was clicked', null=True),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='external_id',
            field=models.CharField(blank=True, help_text='External service ID (e.g., SendGrid message ID)', max_length=100),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, help_text='IP address of the recipient', null=True),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='max_retries',
            field=models.PositiveIntegerField(default=3, help_text='Maximum number of retry attempts'),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='metadata',
            field=models.JSONField(default=dict, help_text='Additional metadata about the notification'),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='next_retry_at',
            field=models.DateTimeField(blank=True, help_text='When to retry sending (if failed)', null=True),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='opened_at',
            field=models.DateTimeField(blank=True, help_text='When the notification was opened', null=True),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='recipient_phone',
            field=models.CharField(blank=True, help_text='Phone number of the recipient (for SMS)', max_length=20),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='retry_count',
            field=models.PositiveIntegerField(default=0, help_text='Number of retry attempts'),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='tracking_id',
            field=models.UUIDField(blank=True, help_text='Unique tracking ID for this notification', null=True, unique=True),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Related user (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notification_logs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notificationlog',
            name='user_agent',
            field=models.TextField(blank=True, help_text='User agent of the recipient'),
        ),
        migrations.AddField(
            model_name='smsnotification',
            name='application',
            field=models.ForeignKey(blank=True, help_text='Related application (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sms_notifications', to='applications.supplierapplication'),
        ),
        migrations.AddField(
            model_name='smsnotification',
            name='cost',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Cost of sending the SMS', max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='smsnotification',
            name='external_id',
            field=models.CharField(blank=True, help_text='External service ID (e.g., Twilio message ID)', max_length=100),
        ),
        migrations.AddField(
            model_name='smsnotification',
            name='metadata',
            field=models.JSONField(default=dict, help_text='Additional metadata about the SMS'),
        ),
        migrations.AddField(
            model_name='smsnotification',
            name='recipient_name',
            field=models.CharField(blank=True, help_text='Name of the recipient', max_length=200),
        ),
        migrations.AddField(
            model_name='smsnotification',
            name='template_name',
            field=models.CharField(blank=True, help_text='Template name used for this SMS', max_length=100),
        ),
        migrations.AddField(
            model_name='smsnotification',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Related user (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sms_notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='notificationlog',
            name='body_html',
            field=models.TextField(blank=True, help_text='Actual HTML body sent'),
        ),
        migrations.AlterField(
            model_name='notificationlog',
            name='body_text',
            field=models.TextField(blank=True, help_text='Actual text body sent'),
        ),
        migrations.AlterField(
            model_name='notificationlog',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('DELIVERED', 'Delivered'), ('BOUNCED', 'Bounced'), ('OPENED', 'Opened'), ('CLICKED', 'Clicked')], default='PENDING', help_text='Status of the notification', max_length=20),
        ),
        migrations.AlterField(
            model_name='smsnotification',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('DELIVERED', 'Delivered'), ('BOUNCED', 'Bounced')], default='PENDING', help_text='Status of the SMS', max_length=20),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['status'], name='notificatio_status_6ea75a_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['channel'], name='notificatio_channel_60a8f3_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['recipient_email'], name='notificatio_recipie_3a11b6_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['created_at'], name='notificatio_created_686aa2_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['tracking_id'], name='notificatio_trackin_e3ff72_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['application'], name='notificatio_applica_2a21a6_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['user'], name='notificatio_user_id_39c637_idx'),
        ),
        migrations.AddIndex(
            model_name='smsnotification',
            index=models.Index(fields=['status'], name='notificatio_status_ad74eb_idx'),
        ),
        migrations.AddIndex(
            model_name='smsnotification',
            index=models.Index(fields=['recipient_phone'], name='notificatio_recipie_a187ec_idx'),
        ),
        migrations.AddIndex(
            model_name='smsnotification',
            index=models.Index(fields=['created_at'], name='notificatio_created_71ea5d_idx'),
        ),
        migrations.AddIndex(
            model_name='smsnotification',
            index=models.Index(fields=['application'], name='notificatio_applica_d481df_idx'),
        ),
        migrations.AddIndex(
            model_name='smsnotification',
            index=models.Index(fields=['user'], name='notificatio_user_id_ceeaa6_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationanalytics',
            index=models.Index(fields=['date'], name='notificatio_date_62be8e_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationanalytics',
            index=models.Index(fields=['channel'], name='notificatio_channel_76820d_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationanalytics',
            index=models.Index(fields=['template_name'], name='notificatio_templat_cf62c8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationanalytics',
            unique_together={('date', 'channel', 'template_name')},
        ),
    ]
