# Generated by Django 5.2.6 on 2025-09-09 18:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=100, unique=True)),
                ('notification_type', models.CharField(choices=[('APPLICATION_SUBMITTED', 'Application Submitted'), ('DOCUMENTS_REQUESTED', 'Documents Requested'), ('APPLICATION_APPROVED', 'Application Approved'), ('APPLICATION_REJECTED', 'Application Rejected'), ('PASSWORD_RESET', 'Password Reset'), ('ACCOUNT_CREATED', 'Account Created')], help_text='Type of notification', max_length=50, unique=True)),
                ('subject', models.CharField(help_text='Email subject template', max_length=200)),
                ('body_html', models.TextField(help_text='HTML email body template')),
                ('body_text', models.TextField(help_text='Plain text email body template')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notifications_notification_template',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SMSNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_phone', models.CharField(help_text='Phone number of the recipient', max_length=20)),
                ('message', models.TextField(help_text='SMS message content')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('DELIVERED', 'Delivered')], default='PENDING', help_text='Status of the SMS', max_length=20)),
                ('error_message', models.TextField(blank=True, help_text='Error message if sending failed')),
                ('sent_at', models.DateTimeField(blank=True, help_text='When the SMS was sent', null=True)),
                ('delivered_at', models.DateTimeField(blank=True, help_text='When the SMS was delivered', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SMS Notification',
                'verbose_name_plural': 'SMS Notifications',
                'db_table': 'notifications_sms_notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_email', models.EmailField(help_text='Email address of the recipient', max_length=254)),
                ('recipient_name', models.CharField(blank=True, help_text='Name of the recipient', max_length=200)),
                ('subject', models.CharField(help_text='Actual subject sent', max_length=200)),
                ('body_html', models.TextField(help_text='Actual HTML body sent')),
                ('body_text', models.TextField(help_text='Actual text body sent')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('DELIVERED', 'Delivered'), ('BOUNCED', 'Bounced')], default='PENDING', help_text='Status of the notification', max_length=20)),
                ('error_message', models.TextField(blank=True, help_text='Error message if sending failed')),
                ('sent_at', models.DateTimeField(blank=True, help_text='When the notification was sent', null=True)),
                ('delivered_at', models.DateTimeField(blank=True, help_text='When the notification was delivered', null=True)),
                ('context_data', models.JSONField(default=dict, help_text='Context data used to render the template')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(help_text='Template used for this notification', on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notifications_notification_log',
                'ordering': ['-created_at'],
            },
        ),
    ]
